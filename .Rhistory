mkdir analysis
install.packages("rrtools")
library(devtools)
packageVersion("devtools")
use_git()
library(devtools)
use_git()
usethis::use_package("wikipediR")
usethis::use_package("WikipediR")
use_mit_license()
use_readme_rmd()
build_readme()
help?(WikipediR::user_contributions())
help?(WikipediR::user_contributions
)
?WikipediR::user_contributions
install.packages('stylr')
install.packages('styler')
knitr::opts_chunk$set(echo = TRUE)
yapperbot <- WikipediR::user_contributions(language = "en", project = "wikipedia.org", username = "Yapperbot", properties =  c("ids","comment"))
yapperbot <- WikipediR::user_contributions(language = "en", project = "wikipedia", username = "Yapperbot", properties =  c("ids","comment"))
View(yapperbot)
yapperbot
yapperbot <- WikipediR::user_contributions(language = "en", project = "wikipedia", username = "Yapperbot", properties =  c("ids","comment"), limit = 50)
yapperbot
?WikipediR
user_contributions
WikipediR::user_contributions
yapperbot <- WikipediR::user_contributions(language = "en", project = "wikipedia", username = "Yapperbot", properties =  c("ids","comment"), limit = 500)
str(yapperbot)
library(devtools)
use_r("wiki_request.R")
use_test()
use_package(httr2)
install.packages("httr2")
use_package(htt2)
use_package(httr2)
use_package("httr2")
use_package("glue")
install.packages("glue")
install.packages("glue")
update.packages()
update.packages()
req <- httr2::request(base_url) %>%
req_url_query(!!!params) %>%
req_user_agent("wikkidity R package (https://github.com/wikihistories/wikkidity") %>%
req_perform()
load_all()
req <- httr2::request(base_url) %>%
req_url_query(!!!params) %>%
req_user_agent("wikkidity R package (https://github.com/wikihistories/wikkidity") %>%
req_perform()
req <- httr2::request(base_url) %>%
httr2::req_url_query(!!!params) %>%
httr2::req_user_agent("wikkidity R package (https://github.com/wikihistories/wikkidity") %>%
httr2::req_perform()
language <- "en"
base_url <- glue::glue("https://{language}.wikipedia.org/w/api.php")
base_url
typeof(base_url)
wiki_action_request <- function(action="query", ..., max=50, language="en") {
base_url <- glue::glue("https://{language}.wikipedia.org/w/api.php")
params <- list(
action=action,
...,
max=max
)
req <- httr2::request(base_url) %>%
httr2::req_url_query(!!!params) %>%
httr2::req_user_agent("wikkidity R package (https://github.com/wikihistories/wikkidity") %>%
httr2::req_perform()
}
load_all()
wiki_request(list="allcategories", acfrom="Category:Australian_historians")
wiki_action_request(list="allcategories", acfrom="Australian_historians")
resp <- wiki_action_request(list="allcategories", acfrom="Australian_historians")
resp
httr2::resp_body_json(resp)
load_all()
resp <- wiki_action_request(list="allcategories", acfrom="Australian_historians")
httr2::resp_body_json(resp)
load_all()
resp <- wiki_action_request(list="allcategories", acfrom="Australian_historians")
httr2::resp_body_json(resp)
rlang::last_error()
httr2::resp_body_string(resp)
load_all()
rlang::last_error()
resp <- wiki_action_request(list="allcategories", acfrom="Australian_historians")
resp
load_all()
wiki_action_request
load_all()
wiki_action_request
library(devtools)
load_all(0)
load_all()
wiki_action_request
resp <- wiki_action_request(list="allcategories", acfrom="Australian_historians")
load_all()
wiki_action_request()
wiki_action_request
resp <- wiki_action_request(list="allcategories", acfrom="Australian_historians")
resp
httr2::resp_body_json(resp)
class(resp)
resp <- wiki_action_request(list="categorymembers", acfrom="Australian_historians")
resp
httr2::resp_body_json(resp)
resp <- wiki_action_request(list="categorymembers", cmtitle="Australian_historians")
httr2::resp_body_json(resp)
resp <- wiki_action_request(list="categorymembers", cmtitle="Category:Australian_historians")
httr2::resp_body_json(resp)
foo
httr2::resp_body_json(resp) -> foo
foo
foo$query$categorymembers
data.frame(foo$query$categorymembers)
data.frame
?data.frame
unlist(foo)
foo
unlist(foo$query$categorymembers)
data.frame(unlist(foo$query$categorymembers))
use_package_doc
use_package_doc()
document()
load_all(0)
load_all()
?wiki_action_request
document()
?wiki_action_request
document()
?wiki_action_request
resp
resp$status_code == 200
resp$headers$`content-type` == "application/json"
resp$headers$`content-type`
httr2::resp_content_type(resp)
httr2::resp_status(resp)
check()
check()
use_package("magrittr")
use_pipe()
check()
check()
stylr::style_package()
styler::style_pkg()
styler::style_pkg()
check()
?wiki_action_request
?wikkidity
?wikkidity
??wikkidity
use_r("get_user_contributions")
usethis::rename_files("get_user_contributions", "get-user-contributions")
rename_files("wiki_request", "wiki-request")
use_test()
paste0(c("a","b","c"), "uc")
paste0("uc", c("a","b","c"))
startsWith("ucuser", "uc")
startsWith("ucuser", "uf")
foo <- c("ucuser", "limit")
use_r("prefix-params")
use_test()
class("hello")
typeof("hello")
class(c("hello"))
?paste0
paste0(c("a", "b", "c"), c("1", "2"))
foo <- rep(10, 1)
foo
foo <- rep(1, 10)
foo
foo[1:3] <- 2
foo
foo[1:3 & 5]
devtools:::test_coverage_active_file()
devtools:::test_active_file()
devtools:::test_active_file()
devtools:::test_active_file()
devtools:::test_active_file()
use_tidy_eval()
devtools:::test_active_file()
devtools:::test_active_file()
paste0(c("michaelgfalk","yapperbot"), collapse="|")
paste0(c("michaelgfalk"), collapse="|")
devtools:::test_active_file()
devtools:::test_active_file()
devtools:::test_active_file()
test()
httr2::req_url_query
devtools:::test_active_file()
test()
devtools:::test_active_file()
test()
use_github_actions()
use_build_ignore("analysis")
check()
devtools::build_readme()
test()
?test
install.packages("covr")
test_coverage()
use_coverage()
build_readme()
check()
library(devtools)
use_coverage
use_coverage(type="codecov")
use_github_action("test-coverage")
list(a=NULL, b=1:3)
rlang::list2(a=NULL, b=1:3)
is.null
foo <- rland::list2(a=NULL, b=1:3)
foo <- rlang::list2(a=NULL, b=1:3)
foo[!is.null(foo)]
?list2
foo <- rlang::dots_list(a=NULL, b=1:3, .preserve_empty = F)
foo
foo <- rlang::dots_list(a=NULL, b=1:3, .ignore_empty = T)
foo <- rlang::dots_list(a=NULL, b=1:3, .ignore_empty = "all")
foo
?unlist
?logical
?&
?`&`
bar <- foo$a
bar
bar <- foo[1]
bar
is.null(bar)
httr2::req("example.com") %>% httr2::req_url_query(a=NULL, b=7)
load_all()
httr2::req("example.com") %>% httr2::req_url_query(a=NULL, b=7)
httr2::request("example.com") %>% httr2::req_url_query(a=NULL, b=7)
foo <- httr2::request("example.com") %>% httr2::req_url_query(a=NULL, b=7)
foo
str(foo)
?errorCondition
?raise
??raise
?stop
!xor(1, NULL)
!xor(1, FALSE)
!xor(1, NULL)
?run_examples
library(devtools)
?request
load_all()
wiki_action_request()
wiki_action_request
run_examples(wiki_action_request())
?run_examples
run_examples()
resp
?wiki_action_request
# List the first 10 pages in the category 'Australian historians'
resp <- wiki_action_request(
list = "categorymembers",
cmtitle = "Category:Australian_historians",
cmlimit = 10
)
resp %>%
httr2::resp_perform() %>%
httr2::resp_body_json(resp)$query$categorymembers
resp
load_all()
run_examples(0)
run_examples()
?req_perform
examples(wiki_action_request)
example(wiki_action_request)
?wiki_action_request
request <- wiki_action_request(
list = "categorymembers",
cmtitle = "Category:Australian_historians",
cmlimit = 10
)
request %>%
httr2::req_perform() %>%
httr2::resp_body_json(resp)$query$categorymembers
foo <- request %>% httr2::req_perform()
foo
load_all()
?wiki_action_request
load_all()
?wiki_action_request
request <- wiki_action_request(
list = "categorymembers",
cmtitle = "Category:Australian_historians",
cmlimit = 10
)
request %>%
httr2::req_perform() %>%
httr2::resp_body_json()$query$categorymembers
request
foo <- htt2::req_perform()
foo <- httr2::req_perform()
foo
foo <- httr2::req_perform(request)
foo
httr2::resp_body_json(foo)
httr2::resp_body_json(foo)$query
httr2::resp_body_json(foo)$query$categorymembers
request %>%
httr2::req_perform() %>%
httr2::resp_body_json(resp) %>% $query$categorymembers
request %>%
httr2::req_perform() %>%
httr2::resp_body_json(resp) %>% .$query %>% .$categorymembers
request %>%
httr2::req_perform() %>%
httr2::resp_body_json() %>% .$query %>% .$categorymembers
check()
check()
?httr2::req_url_query()
load_all()
?set_list_type
load_all()
?set_list_type
document()
?set_list_type
document()
?set_list_type
document()
?set_list_type
rename_files("wiki-request", "wiki-action-request")
use_r("wiki-action-request")
