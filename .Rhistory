}
one_page_properties(1, "pageid", c("categories"))
rlang::last_error()
.set_action
one_page_properties <- function(id, id_type, properties) {
id_type <- rlang::ensym(id_type)
wiki_action_request() %>%
query_page_properties(properties, !!id_type := id)
}
one_page_properties(1, "pageid", c("categories"))
?rlang::arg_match
?map
get_page_properties <- function(.x, by=c("pageid","title","revid"), properties) {
rlang::arg_match(by)
by <- paste0(by, "s")
purrr::map(.x, \(x) one_page_properties(x, by, properties))
}
foo <- get_page_properties(1:5, "title", c("revisions|categories"))
foo[[1]]
get_page_properties <- function(.x, by=c("pageid","title","revid"), properties) {
rlang::arg_match(by)
by <- paste0(by, "s")
purrr::map(.x, \(x) one_page_properties(x, !!by, properties))
}
foo[[1]]
foo <- get_page_properties(1:5, "title", c("revisions|categories"))
foo[[1]]
?wiki_action_request
document()
?mutate
?query_page_properties
library(devtools)
use_pkgdown_github_pages()
build_site()
library(devtools)
build_site()
build_site()
use_r("rest-api")
use_test()
?httr2::req_url_path
run_examples()
document()
load_all()
examples(wikimeda_rest_request)
example(wikimedia_rest_request)
document()
load_all()
example(wikimedia_rest_request)
library(devtools)
load_all()
document()
example(wikimedia_rest_request)
?wikimedia_rest_request
example(wikimedia_rest_request)
response <- wikimedia_rest_request() %>%
httr2::req_url_path("page", "html", "Earth") %>%
httr2::req_perform()
wikimedia_rest_request() %>%
+     httr2::req_url_path("page", "html", "Earth")
?req_throttle
foo <- wikimedia_rest_request()
foo
wikimedia_rest_request() %>%
httr2::req_url_path("page", "html", "Earth")
response <- wikimedia_rest_request() %>%
httr2::req_url_path("page", "html", "Earth") %>%
httr2::req_perform()
rlang::last_error()
response <- wikimedia_rest_request() %>%
httr2::req_url_path("page", "html", "Earth")
response
?url_path_append
?httr2::req_url_path_append
document()
?wikimedia_rest_request
response <- wikimedia_rest_request() %>%
httr2::req_url_path_append("page", "html", "Earth") %>%
httr2::req_perform()
response
response$body
httr2::resp_body_string(response)
?resp_body_string
httr2::resp_body_html(response)
foo <- httr2::resp_body_html(response)
foo
str(foo)
xml2::xml_text(foo)
build_site()
use_r("utils")
document()
document()
load_all
load_all()
test_r()
use_test()
request <- httr2::request("example.com") %>% wikkitidy_user_agent()
load_all()
request <- httr2::request("example.com") %>% wikkitidy_user_agent()
request
request$headers
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test()
print(foo)
print(foo[2])
httr2::resp_status(response)
use_test()
httr2::resp_check_status(response)
?resp_check_status
test_active_file()
document()
load_all()
?core_rest_request
response <- core_rest_request() %>%
httr2::req_url_path_append("page", "Charles Harpur", "html") %>%
httr2::req_perform()
core_rest_request() %>%
+     httr2::req_url_path_append("page", "Charles Harpur", "html")
core_rest_request() %>%
httr2::req_url_path_append("page", "Charles Harpur", "html")
core_rest_request() %>%
httr2::req_url_path_append("page", "Charles%20Harpur", "html")
core_rest_request() %>%
httr2::req_url_path_append("page", "Charles%20Harpur", "html") %>% httr2::req_perform()
test_active_file()
document()
build_site()
date.format
format.Date(min(yapperbot$timestamp))
use_r("blame")
library(devtools)
use_r("blame")
use_test()
log
log(1000, base=2)
log(10000, base=2)
match.arg
?match.arg
200*20
NA > 0
!is.na(0)
tibble(pages=[1:5], from=NULL, to=NULL)
tibble::tibble(pages=[1:5], from=NULL, to=NULL)
tibble::tibble(pages=1:5, from=NULL, to=NULL)
tibble::tibble(pages=1:5, from=NULL, to=NA)
tibble::tibble(pages=1:5, from=NA, to=NA)
cbind(1:5, NA, NA)
class(cbind(1:5, NA, NA))
foo <- class(cbind(1:5, NA, NA))
foo <- cbind(1:5, NA, NA)
foo
sum(foo[1,0])
sum(foo[2,0])
sum(foo[2,0], na.rm=True)
sum(foo[2,0], na.rm=T)
sum(foo[2,1], na.rm=T)
sum(foo[1,1], na.rm=T)
sum(foo[1,:], na.rm=T)
sum(foo[1,], na.rm=T)
sum(foo[2,], na.rm=T)
purrr::pmap(foo, \(x,y,x) x + y + z)
purrr::pmap(foo, \(x,y,x) sum(..., na.rm=T))
purrr::pmap(foo, \(x,y,z) sum(..., na.rm=T))
foo <- tibble::tibble(x=1:5, y=NA, z=NA)
foo
foo <- tibble::tibble(x=1:5, y=NA, z=NA)
purrr::pmap(foo, \(x,y,z) sum(..., na.rm=T))
purrr::pmap(foo, \(x,y,z) sum(..1, ..2, ..3, na.rm=T))
sum(4,5,6)
purrr::pmap(foo, ~ sum(..1, ..2, ..3, na.rm=T))
foo
?pmap
pages <- 1:5
from <- rep(NA, 5)
from
to <- rep(NA, 5)
purr::pmap(list(pages, from, to), \(x, y, x) x + y + z)
purr::pmap(list(pages, from, to), \(x, y, z) x + y + z)
purrr::pmap(list(pages, from, to), \(x, y, z) x + y + z)
foo
tibble::tibble(x=1:5, y=2)
tibble::tibble(x=1:5, y=2:3)
rlang::last_error()
foo <- 1:3
bar <- 4:6
tibble::tibble(foo, bar)
eggs <- function(x, y, z) {tibble::tibble(x, y, z)}
baz <- 7:9
eggs(foo, bar, baz)
rlang::arg_match
?arg_match
p.test
corr.test
?corr
?cor
floor(2.5)
10 // 3
10 / 3
?/
?\/
?//
?divide
??divide
?Arithmetic
10 %/% 2
10 %/% 3
10 %/% 4
foo <- 7
bar <- 8
foo <- 7
bar <- foo
foo <- 10
bar
diff(7,3)
?diff
diff(c(7,3))
resp <- httr2::request
resp <- httr2::request("https://en.wikipedia.org/w/rest.php/v1/revision/847170467/compare/851733941") %>% httr2::req_perform()
req <- httr2::request("https://en.wikipedia.org/w/rest.php/v1/revision/847170467/compare/851733941")
resp <- httr2::req_perform(req)
resp
resp <- httr2::resp_body_json()
resp <- httr2::resp_body_json(resp)
resp
purrr::pluck(resp, "text")
?pluck
req <- httr2::request("https://en.wikipedia.org/w/rest.php/v1/revision/1141477474/compare/1141516792")
resp <- httr2::req_perform()
resp <- httr2::req_perform(req)
resp_body <- httr2::resp_body_json(resp)
resp_body
View(resp_body)
purrr::transpose(resp_body$diff)
purrr::transpose(resp_body$diff) -> transposed_diff
View(transposed_diff)
?str_detect
transposed_diff$text
grepl("{{current", transposed_diff$text)
grepl("\{\{current", transposed_diff$text)
grepl("\\{\\{current", transposed_diff$text)
diff$diff[grepl("\\{\\{current", transposed_diff$text)]
resp_body$diff[grepl("\\{\\{current", transposed_diff$text)]
?escape
??escape
?glue
resp_body$diff[stringr::str_detect("{{current", transposed_diff$text)]
resp_body$diff[stringr::str_detect(transposed_diff$text, "{{current")]
str_detect
?str_detect
?str_detect_fixed
??str_detect
stringr::str_escape("{{current")
use_package("stringr")
?str_detect
resp_body
purrr::pluck(resp_body$diff[[1]], "text")
purrr::pluck(resp_body$diff[[1]], "type")
?quasiquotation
list(x=1+2, y=7*8)
(7 + 8 + 1) %/% 3
test_active_file()
library(devtools)
test_active_file()
test_active_file()
test_active_file()
library(devtools)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
?switch
c(1,2) > c(0, 1)
sum(c(1,2) > c(0, 1))
?switch
rename_files("rest-api", "wikimedia-rest-api")
use_r("core-rest-api")
use_test()
use_r("wikimedia-rest-api")
"a" == c("a")
class("a")
class(c("a"))
str("a")
str(c("a"))
c(list(1,2), list(4))
list(list(1,2), list(4))
?purrr
?map2
purrr::partial
?stop
c(NULL, "back", "forward")
use_test("wikimedia-rest-api")
document()
load_all()
example(get_diff)
?get_diff
?get_diff
example(get_diff)
diff <- get_diff(847170467, 851733941)
rlang::last_error()
load_all()
diff <- get_diff(847170467, 851733941)
load_all()
diff <- get_diff(847170467, 851733941)
load_all()
diff <- get_diff(847170467, 851733941)
.
rlang::last_error()
resp
load_all()
diff <- get_diff(847170467, 851733941)
req
q
q
q
load_all()
diff <- get_diff(847170467, 851733941)
load_all()
diff <- get_diff(847170467, 851733941)
diff
View(diff)
diff[[1]]
str(diff[[1]])
names(diff[[1]])
document()
load_all()
?get_diff
# Compare revision 847170467 to 851733941 on English Wikipedia
diff <- get_diff(847170467, 851733941)
# Each wikidiff2 response contains three main keys:
names(diff[[1]])
# To see the text that has been inserted, deleted, or moved, look in the
# `diff` key, which contains a numbered list of differences
diff[[1]]$diff[[2]]$text
# In this case, the diff is of type `0`, which means an insertion
diff[[1]]$diff[[2]]$type
document()
?get_diff
document()
URLencode("Charles Harpur")
foo <- list(name="Charles Harpur")
purrr::map(foo, URLencode)
test_active_file()
document()
?get_diff
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main Page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all()
URLencode(5)
?map
use_test()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
document()
load_all()
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main Page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all()
# Splice into pairs (NB: the revisions come in reverse chronological order)
revision_pairs <- data.frame(from=revisions$revid[2:5], to=revisions$revid[1:4])
diffs <- get_diff(revision_pairs$from, revision_pairs$to)
revisions
test_active_file()
use_test()
document()
?get_diff
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all()
# Splice into pairs (NB: the revisions come in reverse chronological order)
revision_pairs <- data.frame(from=revisions$revid[2:5], to=revisions$revid[1:4])
diffs <- get_diff(revision_pairs$from, revision_pairs$to)
revisions
revisions[1,6]
revisions[1,7]
revisions[2,7]
revisions[2,7][[1]]
wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>% httr::req_perform()
wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>% httr2::req_perform()
foo <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>% httr2::req_perform()
foo
foo <- httr2::resp_body_json()
foo <- httr2::resp_body_json(foo)
foo
View(foo)
foo <- wiki_action_request() %>%
+     query_page_properties(
+         "revisions", titles="Main_page", rvlimit=5, rvprop="ids"
+     ) %>% httr2::req_perform()
foo <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>% httr2::req_perform()
str(foo)
httr2::resp_headers(foo)
str(foo)
View(foo)
foo4url
foo$url
httr2::url_parse(foo$url)
httr2::request("example.com")
httr2::request("example.com") %>% .$url
?pluck
test_active_file()
test_active_file()
stringr::str_split("hello|dolly")
stringr::str_split("hello|dolly", "|")
stringr::str_split("hello|dolly", "\\|")
stringr::str_split
?stringr::str_split
test_active_file()
test_active_file()
?/pluck
?pluck
test_active_file()
load_all()
?get_diff
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all()
revisions
attr(revisions)
str(revisions)
get_batchcomplete(revisions)
get_request(revisions)
tidyr::unnest
?tidyr::unnest
document()
?get_diff
revisions %>%
mutate(from = revisions$parentid, to = revisions$revid)
revisions %>%
dplyr::mutate(from = revisions$parentid, to = revisions$revid)
revisions %>%
tidyr::unnest(revisions)
?unnest
revisions %>%
tidyr::unnest(revisions)
revisions$revisions
revisions %>%
tidyr::hoist(revisions, "parentid", "revid")
?get_diff
document()
?get_diff
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all() %>%
tidyr::hoist(revisions, "parentid", "revid")
diffs <- get_diff(from=revisions$parentid, to=revisions$revid)
document()
load_all()
?get_diff
diffs <- get_diff(from=revisions$parentid, to=revisions$revid)
load_all()
diffs <- get_diff(from=revisions$parentid, to=revisions$revid)
document()
load_all()
diffs <- get_diff(from=revisions$parentid, to=revisions$revid)
library(devtools)
load_all()
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all() %>%
tidyr::hoist(revisions, "parentid", "revid")
diffs <- get_diff(from=revisions$parentid, to=revisions$revid)
?get_diff
load_all()
use_package("tidyr", "Suggests")
use_test()
use_r()
test_active_file()
diffs <- get_diff(847170467, 851733941)
load_all()
test_active_file()
diffs <- get_diff(847170467, 851733941)
diffs$diff
diffs[[1]]$diff
revisions <- wiki_action_request() %>%
query_page_properties(
"revisions", titles="Main_page", rvlimit=5, rvprop="ids"
) %>%
retrieve_all() %>%
tidyr::hoist(revisions, "parentid", "revid")
revisions
tidyr::hoist
test_active_file()
check()
