[{"path":"https://wikihistories.github.io/wikkidity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 wikkitidy authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wikihistories.github.io/wikkidity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Falk. Author, maintainer.","code":""},{"path":"https://wikihistories.github.io/wikkidity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Falk M (2023). wikkitidy: Retrieve Tidy Data Wikipedia's Many APIs. R package version 0.0.1, https://wikihistories.github.io/wikkidity/.","code":"@Manual{,   title = {wikkitidy: Retrieve Tidy Data from Wikipedia's Many APIs},   author = {Michael Falk},   year = {2023},   note = {R package version 0.0.1},   url = {https://wikihistories.github.io/wikkidity/}, }"},{"path":"https://wikihistories.github.io/wikkidity/index.html","id":"wikkitidy","dir":"","previous_headings":"","what":"Retrieve Tidy Data from Wikipedia's Many APIs ","title":"Retrieve Tidy Data from Wikipedia's Many APIs ","text":"package tidy analysis Wikipedia R.","code":""},{"path":"https://wikihistories.github.io/wikkidity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retrieve Tidy Data from Wikipedia's Many APIs ","text":"can install development version wikkitidy GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"wikihistories/wikkidity\")"},{"path":"https://wikihistories.github.io/wikkidity/reference/as_wiki_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Representation of Wikipedia data as tibble, with request metadata stored as\nattributes — as_wiki_tbl","title":"Representation of Wikipedia data as tibble, with request metadata stored as\nattributes — as_wiki_tbl","text":"Representation Wikipedia data tibble, request metadata stored attributes","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/as_wiki_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Representation of Wikipedia data as tibble, with request metadata stored as\nattributes — as_wiki_tbl","text":"","code":"as_wiki_tbl(x, request, continue, batchcomplete)"},{"path":"https://wikihistories.github.io/wikkidity/reference/as_wiki_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Representation of Wikipedia data as tibble, with request metadata stored as\nattributes — as_wiki_tbl","text":"x tibble request httr2_request object used generate tibble continue continue parameter returned API batchcomplete batchcomplete parameter returned API","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/as_wiki_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Representation of Wikipedia data as tibble, with request metadata stored as\nattributes — as_wiki_tbl","text":"tibble: S3 data.frame class wiki_tbl.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/continue_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Inner loop of retrieve_all — continue_query","title":"Inner loop of retrieve_all — continue_query","text":"function drives retrieve_all, repeatedly appending continue parameters returned MediaWiki Action API request retrieving next batch.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/continue_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inner loop of retrieve_all — continue_query","text":"","code":"continue_query(.req, data = NULL, continue = NULL)"},{"path":"https://wikihistories.github.io/wikkidity/reference/continue_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inner loop of retrieve_all — continue_query","text":".req httr2_request object describing API query data Data returned previous iteration query, continue Continue parameter returned previous iteration query, ","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/continue_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inner loop of retrieve_all — continue_query","text":"wiki_tbl: S3 dataframe subclass tibble::tibble","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/get_page_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Find out more about a page or vector of pages — get_page_properties","title":"Find out more about a page or vector of pages — get_page_properties","text":"function make one API call per page. beware requesting data many pages.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/get_page_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find out more about a page or vector of pages — get_page_properties","text":"","code":"get_page_properties(.x, by = c(\"pageid\", \"title\", \"revid\"), properties)"},{"path":"https://wikihistories.github.io/wikkidity/reference/get_page_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find out more about a page or vector of pages — get_page_properties","text":".x vector pageids, titles revisionids type information contained .x ... Name-value pairs properties wish obtain parameters","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/get_page_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find out more about a page or vector of pages — get_page_properties","text":"list length .x, containing returned properties.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/perform_query_once.html","id":null,"dir":"Reference","previous_headings":"","what":"Get first batch of results for a MediaWiki Action API request — perform_query_once","title":"Get first batch of results for a MediaWiki Action API request — perform_query_once","text":"Get first batch results MediaWiki Action API request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/perform_query_once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get first batch of results for a MediaWiki Action API request — perform_query_once","text":"","code":"perform_query_once(.req)"},{"path":"https://wikihistories.github.io/wikkidity/reference/perform_query_once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get first batch of results for a MediaWiki Action API request — perform_query_once","text":".req httr2_request object describing API query","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/perform_query_once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get first batch of results for a MediaWiki Action API request — perform_query_once","text":"wiki_tbl: S3 dataframe subclass tibble::tibble","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/perform_query_once.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get first batch of results for a MediaWiki Action API request — perform_query_once","text":"","code":"# List the first batch of categories that Albert Einstein belongs to response <- wiki_action_request(   prop = \"categories\",   titles = \"Albert Einstein\"   ) %>%   perform_query_once()"},{"path":"https://wikihistories.github.io/wikkidity/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://wikihistories.github.io/wikkidity/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/prefix_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Add required prefix to URL parameters for MediaWiki Action API request — prefix_params","title":"Add required prefix to URL parameters for MediaWiki Action API request — prefix_params","text":"Add required prefix URL parameters MediaWiki Action API request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/prefix_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add required prefix to URL parameters for MediaWiki Action API request — prefix_params","text":"","code":"prefix_params(params, prefix)"},{"path":"https://wikihistories.github.io/wikkidity/reference/prefix_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add required prefix to URL parameters for MediaWiki Action API request — prefix_params","text":"params character vector prefix character vector","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/prefix_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add required prefix to URL parameters for MediaWiki Action API request — prefix_params","text":"character vector","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_generate_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify which pages to generate from the Action API — query_generate_pages","title":"Specify which pages to generate from the Action API — query_generate_pages","text":"See API:Lists available generators. list actions MediaWiki API can also used generators. use list action generator, receive data pages attribute response body, rather name generator. can query_generate_pages query_page_properties choose properties page return.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_generate_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify which pages to generate from the Action API — query_generate_pages","text":"","code":"query_generate_pages(.req, generator, ...)"},{"path":"https://wikihistories.github.io/wikkidity/reference/query_generate_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify which pages to generate from the Action API — query_generate_pages","text":".req httr2_request, e.g. generated wiki_action_request generator type generator return ... Additional parameters generator","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_generate_pages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify which pages to generate from the Action API — query_generate_pages","text":"HTTP response: S3 list class httr2_request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_generate_pages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify which pages to generate from the Action API — query_generate_pages","text":"set additional parameters generator, prepend parameter \"g\". instance, set limit 10 number pages returned categorymembers generator, set parameter gcmlimit = 10.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_generate_pages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify which pages to generate from the Action API — query_generate_pages","text":"","code":"# Search for articles about seagulls  resp <- wiki_action_request() %>%   query_generate_pages(\"search\", gsrsearch=\"seagull\") %>%   httr2::req_perform() %>%   httr2::resp_body_json()  resp$query$pages #> [[1]] #> [[1]]$pageid #> [1] 45232 #>  #> [[1]]$ns #> [1] 0 #>  #> [[1]]$title #> [1] \"Jonathan Livingston Seagull\" #>  #> [[1]]$index #> [1] 3 #>  #>  #> [[2]] #> [[2]]$pageid #> [1] 170483 #>  #> [[2]]$ns #> [1] 0 #>  #> [[2]]$title #> [1] \"A Flock of Seagulls\" #>  #> [[2]]$index #> [1] 10 #>  #>  #> [[3]] #> [[3]]$pageid #> [1] 210481 #>  #> [[3]]$ns #> [1] 0 #>  #> [[3]]$title #> [1] \"Gull\" #>  #> [[3]]$index #> [1] 1 #>  #>  #> [[4]] #> [[4]]$pageid #> [1] 210492 #>  #> [[4]]$ns #> [1] 0 #>  #> [[4]]$title #> [1] \"Seagull (disambiguation)\" #>  #> [[4]]$index #> [1] 5 #>  #>  #> [[5]] #> [[5]]$pageid #> [1] 474370 #>  #> [[5]]$ns #> [1] 0 #>  #> [[5]]$title #> [1] \"The Seagull\" #>  #> [[5]]$index #> [1] 2 #>  #>  #> [[6]] #> [[6]]$pageid #> [1] 887152 #>  #> [[6]]$ns #> [1] 0 #>  #> [[6]]$title #> [1] \"Barbara Hershey\" #>  #> [[6]]$index #> [1] 6 #>  #>  #> [[7]] #> [[7]]$pageid #> [1] 6386157 #>  #> [[7]]$ns #> [1] 0 #>  #> [[7]]$title #> [1] \"Seagull management\" #>  #> [[7]]$index #> [1] 4 #>  #>  #> [[8]] #> [[8]]$pageid #> [1] 12811837 #>  #> [[8]]$ns #> [1] 0 #>  #> [[8]]$title #> [1] \"Seagull Camera\" #>  #> [[8]]$index #> [1] 9 #>  #>  #> [[9]] #> [[9]]$pageid #> [1] 47120951 #>  #> [[9]]$ns #> [1] 0 #>  #> [[9]]$title #> [1] \"The Seagull (2018 film)\" #>  #> [[9]]$index #> [1] 7 #>  #>  #> [[10]] #> [[10]]$pageid #> [1] 72814018 #>  #> [[10]]$ns #> [1] 0 #>  #> [[10]]$title #> [1] \"Celine Song\" #>  #> [[10]]$index #> [1] 8 #>  #>"},{"path":"https://wikihistories.github.io/wikkidity/reference/query_list_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify which pages to list from the action API — query_list_of","title":"Specify which pages to list from the action API — query_list_of","text":"See API:Lists available list actions. list action returns list pages, typically including pageid, namespace title. Individual lists particular properties can requested, usually prefaced two-word code based name list (e.g. specific properties categorymembers list action prefixed cm).","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_list_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify which pages to list from the action API — query_list_of","text":"","code":"query_list_of(.req, list, ...)"},{"path":"https://wikihistories.github.io/wikkidity/reference/query_list_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify which pages to list from the action API — query_list_of","text":".req httr2_request, e.g. generated wiki_action_request list type list return ... Additional parameters query, e.g. set configure list","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_list_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify which pages to list from the action API — query_list_of","text":"HTTP response: S3 list class httr2_request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_list_of.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify which pages to list from the action API — query_list_of","text":"request performed, data returned body request query object, labeled chosen list action. want study actual pages listed, adviseable retrieve pages directly using generator, rather listing IDs using list action. using list action, second request required get information page. Using generator, can query pages retrieve relevant properties single API call.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_list_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify which pages to list from the action API — query_list_of","text":"","code":"# Get the ten most recently added pages in Category:Physics  resp <- wiki_action_request() %>%   query_list_of(\"categorymembers\", cmsort = \"timestamp\",     cmdir = \"desc\", cmtitle = \"Category:Physics\") %>%   httr2::req_perform() %>%   httr2::resp_body_json()  resp$query$categorymembers #> [[1]] #> [[1]]$pageid #> [1] 36477012 #>  #> [[1]]$ns #> [1] 14 #>  #> [[1]]$title #> [1] \"Category:Concepts in physics\" #>  #>  #> [[2]] #> [[2]]$pageid #> [1] 70983414 #>  #> [[2]]$ns #> [1] 14 #>  #> [[2]]$title #> [1] \"Category:Physics by country\" #>  #>  #> [[3]] #> [[3]]$pageid #> [1] 71976587 #>  #> [[3]]$ns #> [1] 14 #>  #> [[3]]$title #> [1] \"Category:Physics events\" #>  #>  #> [[4]] #> [[4]]$pageid #> [1] 23479 #>  #> [[4]]$ns #> [1] 0 #>  #> [[4]]$title #> [1] \"Physicalism\" #>  #>  #> [[5]] #> [[5]]$pageid #> [1] 10844347 #>  #> [[5]]$ns #> [1] 14 #>  #> [[5]]$title #> [1] \"Category:Physical systems\" #>  #>  #> [[6]] #> [[6]]$pageid #> [1] 1310583 #>  #> [[6]]$ns #> [1] 14 #>  #> [[6]]$title #> [1] \"Category:History of physics\" #>  #>  #> [[7]] #> [[7]]$pageid #> [1] 63332556 #>  #> [[7]]$ns #> [1] 14 #>  #> [[7]]$title #> [1] \"Category:Works about physics\" #>  #>  #> [[8]] #> [[8]]$pageid #> [1] 69843652 #>  #> [[8]]$ns #> [1] 14 #>  #> [[8]]$title #> [1] \"Category:Physical modeling\" #>  #>  #> [[9]] #> [[9]]$pageid #> [1] 49740128 #>  #> [[9]]$ns #> [1] 14 #>  #> [[9]]$title #> [1] \"Category:Subfields of physics\" #>  #>  #> [[10]] #> [[10]]$pageid #> [1] 1653925 #>  #> [[10]]$ns #> [1] 100 #>  #> [[10]]$title #> [1] \"Portal:Physics\" #>  #>"},{"path":"https://wikihistories.github.io/wikkidity/reference/query_page_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose properties to return for pages from the action API — query_page_properties","title":"Choose properties to return for pages from the action API — query_page_properties","text":"See API:Properties list available properties. Many additional parameters control behavior, can passed function named arguments.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_page_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose properties to return for pages from the action API — query_page_properties","text":"","code":"query_page_properties(.req, properties, ...)"},{"path":"https://wikihistories.github.io/wikkidity/reference/query_page_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose properties to return for pages from the action API — query_page_properties","text":".req httr2_request, e.g. generated wiki_action_request properties properties request, either character vector string properties separated \"|\" ... Additional parameters pass, e.g. modify returned property request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_page_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose properties to return for pages from the action API — query_page_properties","text":"HTTP response: S3 list class httr2_request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_page_properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Choose properties to return for pages from the action API — query_page_properties","text":"query_page_properties can used combination query_generate_pages choose information retrieve generated pages. already list page ids titles, can build query using query_page_properties collect information .","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/query_page_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Choose properties to return for pages from the action API — query_page_properties","text":"","code":"# Search for articles about seagulls and return their links to other # language wikis  resp <- wiki_action_request() %>%   query_generate_pages(\"search\", gsrsearch=\"seagull\") %>%   query_page_properties(\"langlinks\") %>%   httr2::req_perform() %>%   httr2::resp_body_json()  resp$query$pages #> [[1]] #> [[1]]$pageid #> [1] 45232 #>  #> [[1]]$ns #> [1] 0 #>  #> [[1]]$title #> [1] \"Jonathan Livingston Seagull\" #>  #> [[1]]$index #> [1] 3 #>  #> [[1]]$langlinks #> [[1]]$langlinks[[1]] #> [[1]]$langlinks[[1]]$lang #> [1] \"ast\" #>  #> [[1]]$langlinks[[1]]$title #> [1] \"Juan Salvador Gaviota\" #>  #>  #> [[1]]$langlinks[[2]] #> [[1]]$langlinks[[2]]$lang #> [1] \"bg\" #>  #> [[1]]$langlinks[[2]]$title #> [1] \"Джонатан Ливингстън Чайката\" #>  #>  #> [[1]]$langlinks[[3]] #> [[1]]$langlinks[[3]]$lang #> [1] \"cs\" #>  #> [[1]]$langlinks[[3]]$title #> [1] \"Jonathan Livingston Racek\" #>  #>  #> [[1]]$langlinks[[4]] #> [[1]]$langlinks[[4]]$lang #> [1] \"de\" #>  #> [[1]]$langlinks[[4]]$title #> [1] \"Die Möwe Jonathan\" #>  #>  #> [[1]]$langlinks[[5]] #> [[1]]$langlinks[[5]]$lang #> [1] \"el\" #>  #> [[1]]$langlinks[[5]]$title #> [1] \"Ο γλάρος Ιωνάθαν Λίβινγκστον\" #>  #>  #> [[1]]$langlinks[[6]] #> [[1]]$langlinks[[6]]$lang #> [1] \"es\" #>  #> [[1]]$langlinks[[6]]$title #> [1] \"Juan Salvador Gaviota\" #>  #>  #> [[1]]$langlinks[[7]] #> [[1]]$langlinks[[7]]$lang #> [1] \"eu\" #>  #> [[1]]$langlinks[[7]]$title #> [1] \"Jonatan Kaioa\" #>  #>  #> [[1]]$langlinks[[8]] #> [[1]]$langlinks[[8]]$lang #> [1] \"fa\" #>  #> [[1]]$langlinks[[8]]$title #> [1] \"جاناتان مرغ دریایی\" #>  #>  #> [[1]]$langlinks[[9]] #> [[1]]$langlinks[[9]]$lang #> [1] \"fi\" #>  #> [[1]]$langlinks[[9]]$title #> [1] \"Lokki Joonatan\" #>  #>  #> [[1]]$langlinks[[10]] #> [[1]]$langlinks[[10]]$lang #> [1] \"fr\" #>  #> [[1]]$langlinks[[10]]$title #> [1] \"Jonathan Livingston le goéland\" #>  #>  #>  #>  #> [[2]] #> [[2]]$pageid #> [1] 210481 #>  #> [[2]]$ns #> [1] 0 #>  #> [[2]]$title #> [1] \"Gull\" #>  #> [[2]]$index #> [1] 1 #>  #>  #> [[3]] #> [[3]]$pageid #> [1] 210492 #>  #> [[3]]$ns #> [1] 0 #>  #> [[3]]$title #> [1] \"Seagull (disambiguation)\" #>  #> [[3]]$index #> [1] 4 #>  #>  #> [[4]] #> [[4]]$pageid #> [1] 474370 #>  #> [[4]]$ns #> [1] 0 #>  #> [[4]]$title #> [1] \"The Seagull\" #>  #> [[4]]$index #> [1] 2 #>  #>  #> [[5]] #> [[5]]$pageid #> [1] 887152 #>  #> [[5]]$ns #> [1] 0 #>  #> [[5]]$title #> [1] \"Barbara Hershey\" #>  #> [[5]]$index #> [1] 6 #>  #>  #> [[6]] #> [[6]]$pageid #> [1] 6386157 #>  #> [[6]]$ns #> [1] 0 #>  #> [[6]]$title #> [1] \"Seagull management\" #>  #> [[6]]$index #> [1] 5 #>  #>  #> [[7]] #> [[7]]$pageid #> [1] 12811837 #>  #> [[7]]$ns #> [1] 0 #>  #> [[7]]$title #> [1] \"Seagull Camera\" #>  #> [[7]]$index #> [1] 9 #>  #>  #> [[8]] #> [[8]]$pageid #> [1] 22496419 #>  #> [[8]]$ns #> [1] 0 #>  #> [[8]]$title #> [1] \"HMS Seagull\" #>  #> [[8]]$index #> [1] 8 #>  #>  #> [[9]] #> [[9]]$pageid #> [1] 47120951 #>  #> [[9]]$ns #> [1] 0 #>  #> [[9]]$title #> [1] \"The Seagull (2018 film)\" #>  #> [[9]]$index #> [1] 7 #>  #>  #> [[10]] #> [[10]]$pageid #> [1] 72814018 #>  #> [[10]]$ns #> [1] 0 #>  #> [[10]]$title #> [1] \"Celine Song\" #>  #> [[10]]$index #> [1] 10 #>  #>"},{"path":"https://wikihistories.github.io/wikkidity/reference/retrieve_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","title":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","text":"Typically request MediaWiki Action API return limited number results. maximum results vary query, typically set 500. results server, API return continue object allowing request batches data. function handles continue object retrieves data desired query.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/retrieve_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","text":"","code":"retrieve_all(x)  # S3 method for httr2_request retrieve_all(x)  # S3 method for wiki_tbl retrieve_all(x)"},{"path":"https://wikihistories.github.io/wikkidity/reference/retrieve_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","text":"x object describing desired request. Either wiki_tbl httr2_request","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/retrieve_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","text":"wiki_tbl: S3 dataframe subclass tibble::tibble","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/retrieve_all.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","text":"retrieve_all(httr2_request): Get available data constructed request retrieve_all(wiki_tbl): Complete query incomplete wiki_tbl","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/retrieve_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continue requesting data from the MediaWiki Action API until there is none\nleft — retrieve_all","text":"","code":"# Create a request object, then repeatedly retrieve all the pages # NB: the 'uclimit' parameter sets the number of pages retrieved by each # API call. jimbos_contributions <- wiki_action_request() %>%   query_list_of(\"usercontribs\", ucuser=\"Jimbo_Wales\", uclimit=500) %>%   retrieve_all() # To confirm, the resulting tibble has more than 500 rows nrow(jimbos_contributions) #> [1] 14175  # Alternatively, you can try out a request using perform_query_once(), and # if you are happy with the resulting data, retrieve the rest of the results # from the returned data frame preview <- wiki_action_request() %>%   query_page_properties(\"categories\", titles=\"Albert Einstein\") %>%   perform_query_once() print(preview) #> # A tibble: 10 × 4 #>    pageid    ns title           categories       #>     <int> <int> <chr>           <list>           #>  1    736     0 Albert Einstein <named list [2]> #>  2    736     0 Albert Einstein <named list [2]> #>  3    736     0 Albert Einstein <named list [2]> #>  4    736     0 Albert Einstein <named list [2]> #>  5    736     0 Albert Einstein <named list [2]> #>  6    736     0 Albert Einstein <named list [2]> #>  7    736     0 Albert Einstein <named list [2]> #>  8    736     0 Albert Einstein <named list [2]> #>  9    736     0 Albert Einstein <named list [2]> #> 10    736     0 Albert Einstein <named list [2]> all_results <- retrieve_all(preview)"},{"path":"https://wikihistories.github.io/wikkidity/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://wikihistories.github.io/wikkidity/reference/wiki_action_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate request for the MediaWiki Action API — wiki_action_request","title":"Generate request for the MediaWiki Action API — wiki_action_request","text":"Generate request MediaWiki Action API","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/wiki_action_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate request for the MediaWiki Action API — wiki_action_request","text":"","code":"wiki_action_request(..., action = \"query\", language = \"en\")"},{"path":"https://wikihistories.github.io/wikkidity/reference/wiki_action_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate request for the MediaWiki Action API — wiki_action_request","text":"... Parameters request action action perform, typically 'query' language language edition Wikipedia request, e.g. 'en' 'fr'","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/wiki_action_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate request for the MediaWiki Action API — wiki_action_request","text":"HTTP response: S3 list class httr2_request.","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/wiki_action_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate request for the MediaWiki Action API — wiki_action_request","text":"","code":"# List the first 10 pages in the category 'Australian historians'  request <- wiki_action_request(   list = \"categorymembers\",   cmtitle = \"Category:Australian_historians\",   cmlimit = 10 ) request %>%   httr2::req_perform() %>%   httr2::resp_body_json() %>%   .$query %>%   .$categorymembers #> [[1]] #> [[1]]$pageid #> [1] 72000612 #>  #> [[1]]$ns #> [1] 0 #>  #> [[1]]$title #> [1] \"Michelle Arrow\" #>  #>  #> [[2]] #> [[2]]$pageid #> [1] 46828642 #>  #> [[2]]$ns #> [1] 0 #>  #> [[2]]$title #> [1] \"Craig Benjamin\" #>  #>  #> [[3]] #> [[3]]$pageid #> [1] 59403076 #>  #> [[3]]$ns #> [1] 0 #>  #> [[3]]$title #> [1] \"Frank Bongiorno\" #>  #>  #> [[4]] #> [[4]]$pageid #> [1] 31593145 #>  #> [[4]]$ns #> [1] 0 #>  #> [[4]]$title #> [1] \"R. J. B. Bosworth\" #>  #>  #> [[5]] #> [[5]]$pageid #> [1] 23093698 #>  #> [[5]]$ns #> [1] 0 #>  #> [[5]]$title #> [1] \"Tim Bowden\" #>  #>  #> [[6]] #> [[6]]$pageid #> [1] 22906640 #>  #> [[6]]$ns #> [1] 0 #>  #> [[6]]$title #> [1] \"Phillip Bradley\" #>  #>  #> [[7]] #> [[7]]$pageid #> [1] 33224431 #>  #> [[7]]$ns #> [1] 0 #>  #> [[7]]$title #> [1] \"Richard Broome\" #>  #>  #> [[8]] #> [[8]]$pageid #> [1] 68287945 #>  #> [[8]]$ns #> [1] 0 #>  #> [[8]]$title #> [1] \"David Brophy (historian)\" #>  #>  #> [[9]] #> [[9]]$pageid #> [1] 8898515 #>  #> [[9]]$ns #> [1] 0 #>  #> [[9]]$title #> [1] \"Trevor R. Bryce\" #>  #>  #> [[10]] #> [[10]]$pageid #> [1] 19158257 #>  #> [[10]]$ns #> [1] 0 #>  #> [[10]]$title #> [1] \"Bill Bunbury\" #>  #>"},{"path":"https://wikihistories.github.io/wikkidity/reference/wikkitidy-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wikkitidy: Tidy Analysis of Wikipedia — wikkitidy-package","title":"wikkitidy: Tidy Analysis of Wikipedia — wikkitidy-package","text":"Explore world's largest knowledge system using world's elegant environment statistical programming. ?","code":""},{"path":"https://wikihistories.github.io/wikkidity/reference/wikkitidy-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wikkitidy: Tidy Analysis of Wikipedia — wikkitidy-package","text":"Maintainer: Michael Falk michaelgfalk@gmail.com (ORCID)","code":""}]
